#!/usr/bin/env python

import logging
import re
import sys
from pathlib import Path

TYPES = ["feat", "impr", "fix", "docs", "chore", "test", "ci", "refactor", "style"]

PATTERN = re.compile(r"(?P<type>\w+)(?:\((?P<scope>[\w-]+)\))?!?:(?P<desc>[^$]+)")


def main(path):
    path = Path(path)
    with path.open("r") as fh:
        msg = fh.read()
        validate_or_exit(msg)


def validate_or_exit(msg):
    log = logging.getLogger("commit-msg hook")
    if msg.startswith("Merge branch"):
        return
    match = PATTERN.match(msg)
    if match is None:
        log.fatal("commit message not in conventional commit form")
        log.info("aborting...")
        sys.exit(1)
    typ = match.group("type")
    if typ not in TYPES:
        log.fatal(f"type '{typ}' is not supported by conventional commits")
        log.info("aborting...")
        sys.exit(1)


if __name__ == "__main__":
    logging.basicConfig(
        format="%(name)s - %(levelname)s - %(message)s",
        level=logging.INFO,
    )
    main(sys.argv[1])
