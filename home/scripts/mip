#!/usr/bin/env luajit

local io = require("io")
local os = require("os")

local json = require("rapidjson")
local request = require("http.request")

local tables = require("luatables")

local TIMEOUT = 15

local COLORS = {
  tables.Color.Red,
  tables.Color.Green,
  tables.Color.Blue,
  tables.Color.Yellow,
}

local function assert_no_trace(nok, msg, ...)
  if nok == nil then
    io.stderr:write(msg)
    os.exit(1)
  end
  return nok, msg, ...
end

local function formatter(i, j, content)
  -- in data column render based on fixed colours
  if j == 2 then
    return content:fg(COLORS[i])
  end
  return content
end

local function main()
  local _, stream = assert_no_trace(request.new_from_uri("http://ip-api.com/json/"):go(TIMEOUT))
  local body = assert_no_trace(stream:get_body_as_string(TIMEOUT))
  local data = json.decode(body)
  local out = tables.Table
    :new()
    :rows({ "IP", data.query }, { "Region", data.regionName }, { "Country", data.country }, { "ISP", data.isp })
    :border(tables.BorderType.None)
    :row_separator(false)
    :column_separator(false)
    :format_cells(formatter)
    :padding(0)
  io.write(out:render() .. "\n")
end

main()
