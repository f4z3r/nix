#!/usr/bin/env luajit

local io = require('io')
local os = require('os')
local string = require('string')
local stringx = require('pl.stringx')
local Logging = require('logging')

local TYPES = {
  "feat",
  "impr",
  "fix",
  "docs",
  "chore",
  "test",
  "ci",
  "refactor",
  "style",
}

local appender = function(_, level, message)
  print("commit-msg", level, message)
  return true
end

local logger = Logging.new(appender)
logger:setLevel(logger.WARN)

local function get_prefix(msg)
  local match = string.match(msg, '[%S%(%)]+:')
  if not match then
    logger:error("could not find any prefix in commit")
    os.exit(1)
  end
  return match
end

local function main(path)
  local fh = io.open(path, 'r')
  if fh == nil then
    logger:error("could not open commit message file")
    os.exit(1)
  end
  local content = fh:read("*a")
  fh:close()
  local prefix = get_prefix(content)
  for _, type in ipairs(TYPES) do
    if stringx.startswith(prefix, type) then
      return
    end
  end

  logger:error("did not find valid prefix in commit message")
  os.exit(1)
end

main(arg[1])
